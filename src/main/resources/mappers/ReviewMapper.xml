<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.studybridge.review.ReviewMapper">


    <!-- 수업 참여 인증 여부 확인, 학생의 role_id가 1이라고 가정한 경우 -->
    <select id="checkUserParticipation">
        SELECT COUNT(*)
        FROM joinclass
        WHERE user_id = #{userId}
        AND class_id = #{classId}
        AND certification = 1
    </select>


    <!-- 학생 유저 리뷰 등록 -->
    <insert id="insertReview">
        INSERT INTO review (join_class_id, comment, star)
        VALUES (#{joinClassId}, #{comment}, #{star})
    </insert>

    <!-- 학생 유저 리뷰 수정 -->
    <update id="updateUserReview">
        UPDATE review
        SET comment = #{comment}, star = #{star}
        WHERE join_class_id = #{joinClassId} AND EXISTS (
        SELECT 1 FROM joinclass j
        WHERE j.join_class_id = #{joinClassId} AND j.user_id = #{userId}
        )
    </update>

    <!-- 특정 유저가 학원 관계자인지 확인 -->
    <select id="isAcademyAdmin">
        SELECT COUNT(*)
        FROM user
        WHERE user_id = #{userId}
        AND role_id = 3
    </select>

    <!-- 학원 관계자 리뷰 삭제 -->
    <delete id="deleteReviewByAcademy">
        DELETE FROM review
        WHERE join_class_id = #{joinClassId}
    </delete>

    <!-- 학원 관계자가 본인 학원의 리뷰 리스트 조회 -->
    <select id="getAcademyReviews">
        SELECT
        r.join_class_id AS joinClassId,  <!-- 수업 참여 ID -->
        u.user_id AS userId,             <!-- 작성자 ID -->
        u.nick_name AS writerName,       <!-- 작성자 닉네임 -->
        u.user_pic AS writerPic,         <!-- 작성자 프로필 사진 -->
        r.comment AS comment,            <!-- 리뷰 내용 -->
        r.star AS star,                  <!-- 별점 -->
        r.created_at AS createdAt        <!-- 작성일 -->
        FROM review r
        JOIN joinclass j ON r.join_class_id = j.join_class_id
        JOIN class c ON j.class_id = c.class_id
        JOIN user u ON j.user_id = u.user_id
        WHERE c.aca_id = #{acaId}
        ORDER BY r.created_at DESC
    </select>


    <!-- 학원 상세페이지에서 학원에 달린 리뷰 리스트 조회 -->
    <select id="getAcademyReviewsForPublic">
        SELECT
        r.join_class_id AS joinClassId,  <!-- 수업 참여 ID -->
        u.nick_name AS writerName,       <!-- 작성자 닉네임 -->
        u.user_pic AS writerPic,         <!-- 작성자 프로필 사진 -->
        r.comment AS comment,            <!-- 리뷰 내용 -->
        r.star AS star,                  <!-- 별점 -->
        r.created_at AS createdAt        <!-- 작성일 -->
        FROM review r
        JOIN joinclass j ON r.join_class_id = j.join_class_id
        JOIN class c ON j.class_id = c.class_id
        JOIN user u ON j.user_id = u.user_id
        WHERE c.aca_id = #{acaId}
        ORDER BY r.created_at DESC
    </select>

</mapper>
