<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.studybridge.review.ReviewMapper">


    <!-- 리뷰 작성자 확인 -->
    <select id="isUserAuthorOfReview">
        SELECT COUNT(*)
        FROM review r
        JOIN joinclass j ON r.join_class_id = j.join_class_id
        WHERE r.join_class_id = #{joinClassId}
        AND j.user_id = #{userId};
    </select>

    <!-- join_class_id 존재여부 -->
    <select id="isValidJoinClassId">
        SELECT COUNT(*)
        FROM joinclass
        WHERE join_class_id = #{joinClassId};
    </select>

    <!-- 학원 ID 존재 여부 확인 -->
    <select id="isValidAcademyId">
        SELECT COUNT(*) > 0
        FROM academy
        WHERE aca_id = #{acaId}
    </select>

    <!-- 수업 참여 인증 여부 확인 -->
    <select id="checkEnrollment">
        SELECT COUNT(*)
        FROM joinclass
        WHERE join_class_id = #{joinClassId}
        AND certification = 1;
    </select>

    <!-- 리뷰 등록 -->
    <insert id="insertReview">
        INSERT INTO review (join_class_id, comment, star)
        VALUES (#{joinClassId}, #{comment}, #{star});
    </insert>


    <!-- 학생 유저 리뷰 수정 -->
    <update id="updateReview">
        UPDATE review r
        INNER JOIN joinclass j ON r.join_class_id = j.join_class_id
        SET r.comment = #{comment}, r.star = #{star}
        WHERE r.join_class_id = #{joinClassId}
        AND j.user_id = #{userId};
    </update>


    <!-- 학원 관계자 리뷰 삭제 -->
    <delete id="deleteReviewByAcademy">
        DELETE FROM review
        WHERE join_class_id = #{joinClassId}
    </delete>

    <!-- 본인 리뷰 삭제 -->
    <delete id="deleteReviewByUser">
        DELETE r
        FROM review r
        INNER JOIN joinclass j
        ON r.join_class_id = j.join_class_id
        WHERE r.join_class_id = #{joinClassId}
        AND j.user_id = #{userId};
    </delete>


    <!-- Role 검증 -->
    <select id="getUserRoleId">
        SELECT role_id
        FROM user
        WHERE user_id = #{userId};
    </select>

    <!-- 학원-사용자 연관 확인 -->
    <select id="isUserLinkedToAcademy">
        SELECT COUNT(*)
        FROM academy a
        JOIN user u ON a.user_id = u.user_id
        WHERE a.aca_id = #{acaId}
        AND u.user_id = #{userId}
        AND u.role_id = 3;
    </select>

    <!-- 학원 ID와 리뷰 ID 간의 연관성 확인 -->
    <select id="isReviewLinkedToAcademy">
        SELECT COUNT(*)
        FROM review r
        JOIN joinclass j ON r.join_class_id = j.join_class_id
        WHERE r.join_class_id = #{joinClassId}
        AND j.class_id IN (
        SELECT class_id
        FROM class
        WHERE aca_id = #{acaId}
        );
    </select>


    <!-- 리뷰 조회 -->
    <select id="getAcademyReviews">
        SELECT
        r.join_class_id AS joinClassId,
        u.user_id AS userId,
        u.nick_name AS writerName,
        u.user_pic AS writerPic,
        r.comment AS comment,
        r.star AS star,
        r.created_at AS createdAt
        FROM review r
        JOIN joinclass j ON r.join_class_id = j.join_class_id
        JOIN class c ON j.class_id = c.class_id
        JOIN user u ON j.user_id = u.user_id
        WHERE c.aca_id = #{acaId}
        ORDER BY r.created_at DESC;
    </select>


    <!-- 학원 상세페이지에서 학원에 달린 리뷰 리스트 조회 -->
    <select id="getAcademyReviewsForPublic">
        SELECT
        r.join_class_id AS joinClassId,  <!-- 수업 참여 ID -->
        u.nick_name AS writerName,       <!-- 작성자 닉네임 -->
        u.user_pic AS writerPic,         <!-- 작성자 프로필 사진 -->
        r.comment AS comment,            <!-- 리뷰 내용 -->
        r.star AS star,                  <!-- 별점 -->
        r.created_at AS createdAt        <!-- 작성일 -->
        FROM review r
        JOIN joinclass j ON r.join_class_id = j.join_class_id
        JOIN class c ON j.class_id = c.class_id
        JOIN user u ON j.user_id = u.user_id
        WHERE c.aca_id = #{acaId}
        ORDER BY r.created_at DESC
    </select>



    <!-- 유저가 본인 마이페이지에서 작성한 리뷰 리스트 조회 -->
    <select id="getReviewsByUserId">
        SELECT
        r.join_class_id AS joinClassId,
        r.comment AS comment,
        r.star AS star,
        r.created_at AS createdAt,
        c.aca_id AS acaId,
        a.aca_name AS acaName,
        u.user_id AS userId,
        u.user_pic AS userPic
        FROM
        review r
        JOIN
        joinclass j ON r.join_class_id = j.join_class_id
        JOIN
        class c ON j.class_id = c.class_id
        JOIN
        academy a ON c.aca_id = a.aca_id
        JOIN
        user u ON j.user_id = u.user_id
        WHERE
        j.user_id = #{userId}
        ORDER BY
        r.created_at DESC;
    </select>


</mapper>
